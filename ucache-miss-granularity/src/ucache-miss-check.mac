%ifndef UCACHE_MISS_CHECK_MAC
%define UCACHE_MISS_CHECK_MAC

%macro nopax8_rep 1
    align 64
    %%loop:
    %rep %1
         times 8 nop ax
    %endrep
    dec rdi
    jnz %%loop
%endmacro

%macro nopax7jmp 1
    align 64
    %%loop:
    ;TODO: This is an ugly way to check for evennes of the current iteration
    %define ODD
    %rep %1
        %ifdef ODD
            times 7 nop ax
            %push
                jmp %$aligned_label
                align 32
                %$aligned_label:
            %pop
            %undef ODD
        %else
            times 8 nop ax
            %define ODD
        %endif
    %endrep
    dec rdi
    jnz %%loop
%endmacro

%macro nopax8nop19jmp 1
    align 64
    %%loop:
    %rep %1
        times 8 nop ax
        times 19 nop
        %push
            jmp %$aligned_label
            align 64
            %$aligned_label:
        %pop
    %endrep
    dec rdi
    jnz %%loop
%endmacro

%macro nopax7jmp_nop19jmp 1
    align 64
    %%loop:
    %rep %1
        times 7 nop ax
        %push
            jmp %$aligned_label
            align 32
            %$aligned_label:
        %pop
        times 19 nop
        %push
            jmp %$aligned_label
            align 32
            %$aligned_label:
        %pop
    %endrep
    dec rdi
    jnz %%loop
%endmacro

%macro nop32nopax4jnzjmp 1
    align 32
    %%loop:
    %rep %1
        times 4 nop ax
        test edi, 0x1
        %push
            jnz %$lbl1
            jmp %$lbl2
            align 32
            %$lbl1:
            times 32 nop
            %$lbl2:
        %pop
    %endrep
    nop
    dec rdi
    jnz %%loop
%endmacro

%macro iftag_granularity_miss 1
    align 64
    %%loop:
    times %1 nop
    jmp %%next_instructio
    %%next_instructio:
    %assign ucache_rest_space 30 - %1
    times ucache_rest_space nop
    %%32_bytes_boundary: ;To simplify debugging
    times 32 nop
    %%loop_return:       ;To simplify debugging
    dec rdi
    jnz %%loop
%endmacro

%endif ;UCACHE_MISS_CHECK_MAC
